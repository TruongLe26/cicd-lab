name: CI/CD Pipeline

on:
  push:
    branches: [ 'develop', 'feature/**' ]
  pull_request:
    branches: [ 'develop' ]

jobs:
  check:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK 17 (with Maven cache)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Make Maven wrapper executable
        shell: bash
        run: chmod +x ./mvnw

      - name: Spotless (format check only)
        run: ./mvnw -B spotless:check

      - name: SpotBugs
        run: ./mvnw -B spotbugs:check

  test:
    name: Run Tests (via custom action)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Use test action
        id: test-step
        uses: ./.github/actions/test

      - name: Print test summary
        if: always()
        run: cat target/surefire-reports/*.txt || true

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: ${{ steps.test-step.outputs.report-path }}

  build:
    name: Compile, Test & Package
    needs: [check, test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17 (with Maven cache)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build, test and SonarQube analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "Running with SonarQube analysis..."
          mvn -B verify \
            org.sonarsource.scanner.maven:sonar-maven-plugin:5.1.0.4751:sonar \
            -Dsonar.projectKey=cicd-lab \
            -DskipTests=true

      - name: Archive JAR artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: cicd-lab.jar
          path: target/cicd-lab.jar

  publish:
    name: Publish Docker Image to GHCR
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Download JAR from build job
        uses: actions/download-artifact@v4
        with:
          name: cicd-lab.jar
          path: .

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lower case image name
        run: echo "REPO_NAME_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.REPO_NAME_LC }}:latest
            ghcr.io/${{ env.REPO_NAME_LC }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max